# Задание №2 (сложное)
# Написать алгоритм, который сортирует список по следующему алгоритму:
#
# Сортируемый массив разбивается на две части примерно одинакового размера;
# Каждая из получившихся частей сортируется отдельно, например — тем же самым алгоритмом;
# Два упорядоченных массива половинного размера соединяются в один.
# 1.1. — 2.1. Рекурсивное разбиение задачи на меньшие происходит до тех пор, пока размер массива не достигнет единицы
# (любой массив длины 1 можно считать упорядоченным).
# 3.1. Соединение двух упорядоченных массивов в один.
# Основную идею слияния двух отсортированных массивов можно объяснить на следующем примере.
# Пусть мы имеем два уже отсортированных по неубыванию подмассива. Тогда:
# 3.2. Слияние двух подмассивов в третий результирующий массив.
# На каждом шаге мы берём меньший из двух первых элементов подмассивов и записываем его в результирующий массив.
# Счётчики номеров элементов результирующего массива и подмассива, из которого был взят элемент, увеличиваем на 1.
# 3.3. «Прицепление» остатка.
# Когда один из подмассивов закончился, мы добавляем все оставшиеся элементы второго подмассива в результирующий массив.

import random

list = random.shuffle(list(range(1, 20)))

if len(list)>1:

